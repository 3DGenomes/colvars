# -*- tcl -*-

# FILENAMES
set outName             [file rootname [file tail [info script]]]
#set inFileNum           [expr [scan [string range $outName end-1 end] "%d"] - 1]
#set inName              [format "%s%02u" [string range $outName 0 end-2] $inFileNum]

# FILES

#outputname              test01
#DCDfile                 test01.dcd

# MD SETUP
timestep          0.5
numSteps		  20

# Interactive molecular dynamics
#IMDon               on
#IMDport             3000
#IMDfreq             20
#IMDwait             on

colvars			  on
colvarsConfig	  test.in
#colvarsInput  $inName.colvars.state
#colvarsInput  test.colvars.state

#tclForces on
#tclForcesScript {
#  addatom 12
#  proc calcforces {} {
#    addforce 12 { 10 0 0 }
#  }
#}

# INPUT
structure               ../Common/da.psf 
#parameters              missing.par
parameters              ../Common/par_all22_prot.inp
paraTypeCharmm          on
coordinates             ../Common/da.min.pdb

temperature 250
#bincoordinates       $inName.coor
#binvelocities        $inName.vel

# OUTPUT

outputname              ${outName}
outputenergies          100
outputtiming            2000
binaryoutput            no
# binaryrestart           yes

#XSTFreq                 1000

# DCD TRAJECTORY

DCDfile                 ${outName}.dcd
DCDfreq                 2000

seed		87654321

# CONSTANT-T
langevin                on
langevinTemp		    300.0
langevinDamping         10.0
langevinHydrogen	    on

# SPACE PARTITIONING
splitpatch              hydrogen
hgroupcutoff            2.8
stepspercycle           20
margin                  1.0

# CUT-OFFS
switching               on
switchdist              9.0
cutoff                  11.0
pairlistdist            12.0

# RESPA 
fullElectFrequency      1
nonbondedFreq           1

# 1-4 NON-BONDED
exclude                 scaled1-4
1-4scaling              1.0

# COM
commotion               no

# SHAKE
rigidBonds              none

proc runcmd { cmd } {
  print "Running $cmd"
  print [eval $cmd]
}

run 0

foreach c [colvars list] { print "$c = [colvars colvar $c value]"}        
foreach b [colvars list biases] { print "E($b) = [colvars bias $b energy]"}

runcmd "colvars update"

foreach c [colvars list] { print "$c = [colvars colvar $c value]"}        
foreach b [colvars list biases] { print "E($b) = [colvars bias $b energy]"}

run 20

foreach c [colvars list] { print "$c = [colvars colvar $c value]"}        
foreach b [colvars list biases] { print "E($b) = [colvars bias $b energy]"}

# colvars config "colvar {
#   name d2
#   distance {
#     group1 { atomnumbers 4 }
#     group2 { atomnumbers 99 }
#   }
# }"
# runcmd "colvars colvar d2 value"
# runcmd "colvars update"
# runcmd "colvars colvar d2 value"
# run 20
# runcmd "colvars colvar d2 value"
# runcmd "colvars colvar d2 delete"

colvars config "harmonic {
  name harm2
  colvars d
  centers 13
  forceConstant 1.
  outputEnergy yes
}"
run 20 

runcmd "colvars bias harmonic1 delete"

runcmd "colvars bias harm2 energy"
runcmd "colvars bias harm2 update"
run 20 
runcmd "colvars bias harm2 energy"
runcmd "colvars bias harm2 delete"

colvars reset
# reinitialize just for the fun of it ;-)
colvars configfile 	  test.in
