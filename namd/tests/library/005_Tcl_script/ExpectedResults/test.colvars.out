colvars: ----------------------------------------------------------------------
colvars: # indexFile = "" [default]
colvars: # analysis = off [default]
colvars: # colvarsTrajFrequency = 20
colvars: # colvarsRestartFrequency = 20000
colvars: # colvarsTrajAppend = off [default]
colvars: The final output state file will be "test.colvars.state".
colvars: Writing to colvar trajectory file "test.colvars.traj".
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new collective variable.
colvars:   # name = d
colvars:   Initializing a new "distance" component.
colvars:     # componentCoeff = 1 [default]
colvars:     # componentExp = 1 [default]
colvars:     # period = 0 [default]
colvars:     # wrapAround = 0 [default]
colvars:     # forceNoPBC = off [default]
colvars:     # oneSiteSystemForce = off [default]
colvars:       Initializing atom group "group1".
colvars:       # indexGroup = "" [default]
colvars:       # psfSegID =  [default]
colvars:       # atomsFile = "" [default]
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       # enableForces = on [default]
colvars:       # disableForces = off [default]
colvars:       # centerReference = off [default]
colvars:       # rotateReference = off [default]
colvars:       # enableFitGradients = on [default]
colvars:       Atom group "group1" defined, 1 atoms initialized: total mass = 12.011.
colvars:       Initializing atom group "group2".
colvars:       # indexGroup = "" [default]
colvars:       # psfSegID =  [default]
colvars:       # atomsFile = "" [default]
colvars:       # dummyAtom = ( 0 , 0 , 0 ) [default]
colvars:       # enableForces = on [default]
colvars:       # disableForces = off [default]
colvars:       # centerReference = off [default]
colvars:       # rotateReference = off [default]
colvars:       # enableFitGradients = on [default]
colvars:       Atom group "group2" defined, 1 atoms initialized: total mass = 12.011.
colvars:   All components initialized.
colvars:   # width = 0.2
colvars:   # lowerBoundary = 12
colvars:   # lowerWallConstant = 0 [default]
colvars:   # upperBoundary = 32
colvars:   # upperWallConstant = 0 [default]
colvars:   # hardLowerBoundary = off [default]
colvars:   # hardUpperBoundary = off [default]
colvars:   # expandBoundaries = off [default]
colvars:   # extendedLagrangian = off [default]
colvars:   # outputValue = on [default]
colvars:   # outputVelocity = off [default]
colvars:   # outputSystemForce = off [default]
colvars:   # outputAppliedForce = off [default]
colvars: ----------------------------------------------------------------------
colvars: Collective variables initialized, 1 in total.
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new "abf" instance.
colvars:   # name = "abf1" [default]
colvars:   # colvars = { d }
colvars:   # outputEnergy = off [default]
colvars:   # applyBias = on [default]
colvars:   # updateBias = on [default]
colvars:   # hideJacobian = off [default]
colvars:   Jacobian (geometric) forces will be included in reported free energy gradients.
colvars:   # fullSamples = 100
colvars:   # inputPrefix =  [default]
colvars:   # outputFreq = 20000 [default]
colvars:   # historyFreq = 0 [default]
colvars:   # maxForce =  [default]
colvars:   Finished ABF setup.
colvars: ----------------------------------------------------------------------
colvars:   Initializing a new "harmonic" instance.
colvars:   # name = "harmonic1" [default]
colvars:   # colvars = { d }
colvars:   # outputEnergy = on
colvars:   # forceConstant = 10
colvars:   The force constant for colvar "d" will be rescaled to 250 according to the specified width.
colvars:   # centers = { 12 }
colvars:   # targetCenters = { 12 } [default]
colvars:   # targetForceConstant = 0 [default]
colvars:   # outputCenters = off [default]
colvars:   # outputAccumulatedWork = off [default]
colvars: ----------------------------------------------------------------------
colvars: Collective variables biases initialized, 2 in total.
colvars: ----------------------------------------------------------------------
colvars: Collective variables module initialized.
colvars: ----------------------------------------------------------------------
colvars: Saving collective variables state to "test.colvars.state".
