# -*- tcl -*-

# FILENAMES
set outName             [file rootname [file tail [info script]]]
#set inFileNum           [expr [scan [string range $outName end-1 end] "%d"] - 1]
#set inName              [format "%s%02u" [string range $outName 0 end-2] $inFileNum]

# FILES

#outputname              test01
#DCDfile                 test01.dcd

# MD SETUP
timestep          0.5
numSteps		  20

# Interactive molecular dynamics
#IMDon               on
#IMDport             3000
#IMDfreq             20
#IMDwait             on

colvars			  on
colvarsConfig	  test.in
#colvarsInput  $inName.colvars.state
#colvarsInput  test.colvars.state

#tclForces on
#tclForcesScript {
#  addatom 12
#  proc calcforces {} {
#    addforce 12 { 10 0 0 }
#  }
#}

# INPUT
structure               ../Common/da.psf 
#parameters              missing.par
parameters              ../Common/par_all22_prot.inp
paraTypeCharmm          on
coordinates             ../Common/da.min.pdb

temperature 250
#bincoordinates       $inName.coor
#binvelocities        $inName.vel

# OUTPUT

outputname              ${outName}
outputenergies          100
outputtiming            2000
binaryoutput            no
# binaryrestart           yes

#XSTFreq                 1000

# DCD TRAJECTORY

DCDfile                 ${outName}.dcd
DCDfreq                 2000

seed		87654321

# CONSTANT-T
langevin                on
langevinTemp		    300.0
langevinDamping         10.0
langevinHydrogen	    on

# SPACE PARTITIONING
splitpatch              hydrogen
hgroupcutoff            2.8
stepspercycle           20
margin                  1.0

# CUT-OFFS
switching               on
switchdist              9.0
cutoff                  11.0
pairlistdist            12.0

# RESPA 
fullElectFrequency      1
nonbondedFreq           1

# 1-4 NON-BONDED
exclude                 scaled1-4
1-4scaling              1.0

# COM
commotion               no

# SHAKE
rigidBonds              none

# Scripted harmonic bias on colvar d

proc calc_colvar_forces {} {
  set center 18.
  set k 500.

  set d [cv colvar d value]
  set f [expr {$k * ($center - $d)}]
  set r [cv colvar d addforce $f]
  print "Applying force $r to colvar d"

  set r [cv colvar o addforce "(1., 0., 1., 0.)"]
  print "Applying force $r to colvar o"

  return
}
